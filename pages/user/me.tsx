/* eslint-disable require-jsdoc */
import axios from "axios";
import { prominent } from "color.js";
import { NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import styled, { ThemeProvider } from "styled-components";
import { HomeCointainer } from "../../styles/components/home";
import Footer from "../components/footer";
import Navbar from "../components/navbar";
import FavoritePosts from "../components/user/cardLoader";
import { useTranslations } from "next-intl";
import { useRouter } from "next/router";

const ProfileSection = styled.div`
  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4)),
    linear-gradient(
      rgba(${(props) => props.theme.main}, 0.9),
      rgba(${(props) => props.theme.main}, 0.9)
    );
  background-size: cover;
  background-position: center;
`;

const myProfile: NextPage = ({ posts, user }: any) => {
  const router = useRouter();
  const { locale } = useRouter();
  const signIn = () => {
    // Hack until Next Auth JS Fixes locale forwarding
    if (locale == "en-US") {
      router.push(
        `/signin?callbackUrl=${process.env.NEXTAUTH_URL}/en-US${router.asPath}`
      );
    } else {
      router.push(
        `/signin?callbackUrl=${process.env.NEXTAUTH_URL}${router.asPath}`
      );
    }
  };
  const t = useTranslations("myprofile");
  const [colorr, setColor] = useState("");
  const { data: session, status } = useSession();
  const [userData, setUserData] = useState([]);
  useEffect(() => {
    data();
  }, [status]);
  const data = () => {
    if (status === "authenticated") {
      if (session) {
        axios
          .post("https://futop.vercel.app/api/userinfo", {
            session: session,
          })
          .then((res) => {
            setUserData(res.data.user.favorites);
          });
      } else {
      }
    }
  };
  if (status === "loading") {
    return (
      <HomeCointainer>
        <main>
          <Navbar />
          <div className="w-full dark:bg-[#161819] h-[800px] pt-[80px] flex flex-col justify-center items-center"></div>
          <Footer />
        </main>
      </HomeCointainer>
    );
  }

  if (status === "unauthenticated") {
    signIn();
  }
  if (status === "authenticated") {
    if (typeof window === "object") {
      prominent(
        `https://cors.jg-limamarinho202.workers.dev/?${
          session?.user?.image?.split("=")[0] + "=s400-c"
        }`,
        {
          amount: 7,
        }
      ).then((color: any) => {
        setColor(color[1].toString());
      });
    }
    const theme = {
      main: colorr,
      image: session?.user?.image?.split("=")[0] + "=s400-c",
    };
    return (
      <HomeCointainer>
        <Head>
          <link
            href="https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css"
            rel="stylesheet"
          ></link>
          <meta charSet="UTF-8"></meta>
          <meta name="#fece2f"></meta>
          <title>{t("myprofile")} - Futop</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <Navbar />
          <ThemeProvider theme={theme}>
            <ProfileSection className="w-full bg-[#1e2022] min-h-[430px] pt-[80px] flex flex-col justify-center items-center md:flex-row md:justify-start md:px-16">
              <img
                src={session?.user?.image?.split("=")[0] + "=s400-c" || ""}
                className="w-[170px] h-[170px] mb-6 md:mb-0 bg-black rounded-full"
              ></img>
              <div className="md:ml-5 flex flex-col justify-center items-center md:items-start md:flex-col-reverse">
                <h3 className="text-center md:text-left text-white text-2xl font-semibold md:text-[37px] md:mt-2">
                  {session?.user?.name}
                </h3>
                <h4 className="text-center md:text-left text-white/70 font-normal">
                  {t("myprofile")}
                </h4>
              </div>
            </ProfileSection>
          </ThemeProvider>
          <section className="w-full flex justify-center dark:bg-[#161819] h-auto min-h-[200px]">
            <div className="w-full px-5 lg:px-16 flex flex-col items-center md:items-start md:pt-[80px] pt-[70px] min-h-full h-auto">
              <h2 className="mb-[40px] text-black dark:text-white text-3xl font-bold text-center md:text-left">
                {t("myfavorites")}
              </h2>
              <div className="mb-20 w-full h-auto">
                <FavoritePosts posts={userData} />
              </div>
            </div>
          </section>
          <Footer />
        </main>
      </HomeCointainer>
    );
  }
  return (
    <HomeCointainer>
      <main>
        <Navbar />
        <div className="w-full h-[800px] dark:bg-[#161819] pt-[80px] flex flex-col justify-center items-center"></div>
        <Footer />
      </main>
    </HomeCointainer>
  );
};
export const getServerSideProps = async ({ locale }: any) => {
  return {
    props: {
      messages: require(`../../locales/${locale}.json`),
    },
  };
};
export default myProfile;
