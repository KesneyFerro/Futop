/* eslint-disable react/prop-types */
/* eslint-disable require-jsdoc */
/* eslint-disable react/jsx-no-undef */
// import { AnimatePresence, motion } from "framer-motion";
// import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";
import { HomeCointainer } from "../styles/components/home";
import Footer from "./components/footer";
import Navbar from "./components/navbar";
import Posts from "./components/opportunitysLoad";
import ShareAOpportunity from "./components/shareAOpportunity";

const Home: NextPage = ({ posts }: any) => {
  const [isFilterOpen, setIsFilterOpen] = useState(false);
  const [inputvalue, setInputvalue] = useState("");

  const [opportunitySelected, setOpportunitySelected] = useState(
    "Tipo de Oportunidade"
  );
  const [opportunityType] = useState([
    "Tipo de Oportunidade",
    "Instituição",
    "Bolsa",
    "Curso",
  ]);
  const opportunityAdd = opportunityType.map(
    (opportunityAdd) => opportunityAdd
  );
  const handleOpportunityChange = (e: any) => {
    setOpportunitySelected(opportunityType[e.target.value]);
  };

  const [educationLevelSelected, seteducationLevelSelected] = useState(
    "Níveis de Escolaridade"
  );
  const [educationLevelType] = useState([
    "Níveis de Escolaridade",
    "Ensino Fundamental I",
    "Ensino Fundamental II",
    "Ensino médio",
  ]);
  const educationLevelAdd = educationLevelType.map(
    (educationLevelAdd) => educationLevelAdd
  );
  const handleEducationLevelChange = (e: any) => {
    seteducationLevelSelected(educationLevelType[e.target.value]);
  };

  const [counter, setCounter] = useState(1);

  return (
    <HomeCointainer>
      <Head>
        <link
          href="https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css"
          rel="stylesheet"
        ></link>
        <meta charSet="UTF-8"></meta>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center flex-col">
        <Navbar />
        <div className="mainContentOpportunities w-[80%] flex justify-center flex-col mt-[80px]  mb-10">
          <div className="mt-24 mainContentTitle flex-col text-center">
            <div className="titleOpportunities">
              <h2 className=" font-extrabold text-[38px] text-[#090D2D] mb-3">
                Encontre a sua{" "}
                <span className=" text-[#FFC700]">opotunidade</span>
              </h2>
            </div>
            <div className="descriptionOpportunities mt-2">
              <p className="text-[#9F9F9E] font-medium text-[15px]">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                Pellentesque sed sodales nibh leo. Cursus odio ullamcorper elit
                odio augue.
              </p>
            </div>
          </div>
          <div className="mt-16 searchbar bg-[#FDFDFE] w-full mb-16 h-auto drop-shadow-md rounded-[15px] flex-col px-4">
            <div className="flex items-center w-full my-[10.5px]">
              <i className="bx bx-search text-[#8A8A8A] text-[25px] mr-3"></i>
              <input
                placeholder="Pesquise Aqui..."
                value={inputvalue}
                onChange={(e) => setInputvalue(e.target.value)}
                className=" border-0 outline-none focus:outline-none bg-transparent placeholder:text-sm placeholder:font-normal text-[15px] font-medium w-full"
              ></input>
              <button
                onClick={() => setIsFilterOpen(!isFilterOpen)}
                className={`ml-5 filterBox rounded-[12px] cursor-pointer border-[2px] ${
                  isFilterOpen ? "border-[#747474] " : "border-[#5d6075] "
                } w-[35px] min-w-[35px] h-[35px] flex justify-center  items-center ${
                  isFilterOpen ? "bg-black/80" : "bg-transparent"
                }`}
              >
                <i
                  className={`bx bx-filter-alt text-xl  ${
                    isFilterOpen ? "text-[#ffffff]" : "text-[#8A8A8A]"
                  }`}
                ></i>
              </button>
            </div>
            {isFilterOpen && (
              <div className="w-full h-14 flex items-center mb-[10.5px]">
                <select
                  onChange={(e) => handleOpportunityChange(e)}
                  className=" border-2 mr-7 border-black/30 text-[15px] text-black/70 font-semibold drop-shadow-sm appearance-none text-center rounded-2xl px-2 bg-white text-black w-full py-[10px]"
                >
                  {opportunityAdd.map((type, key) => (
                    <option key={key} value={key}>
                      {type}
                    </option>
                  ))}
                </select>
                <select
                  onChange={(e) => handleEducationLevelChange(e)}
                  className=" border-2 border-black/30 text-[15px] text-black/70 font-semibold drop-shadow-sm appearance-none text-center rounded-2xl px-2 bg-white text-black w-full py-[10px]"
                >
                  {educationLevelAdd.map((type, key) => (
                    <option key={key} value={key}>
                      {type}
                    </option>
                  ))}
                </select>
              </div>
            )}
          </div>
          <Posts
            counter={counter}
            setCounter={setCounter}
            inputValue={inputvalue}
            oportunitySelected={opportunitySelected}
            educationLevelSelected={educationLevelSelected}
          />
        </div>
        <ShareAOpportunity />
        <Footer />
      </main>
    </HomeCointainer>
  );
};

export default Home;
